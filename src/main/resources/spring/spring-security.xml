<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.gif" security="none" />

	<beans:bean class="task.architecture.security.CutomAuthenticationEntryPoint"
		id="authenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login"></beans:property>
	</beans:bean>

	<http auto-config="true" use-expressions="true"
		entry-point-ref="authenticationEntryPoint" access-denied-page="/failed">
		<custom-filter before="FORM_LOGIN_FILTER" ref="clientLoginFilter" />

		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/task/main"
			access="hasAnyRole('ROLE_TEAMLEADER','ROLE_DEVELOPER','ROLE_ADMIN')" />
		<intercept-url pattern="/task/search"
			access="hasAnyRole('ROLE_TEAMLEADER','ROLE_DEVELOPER')" />
		<intercept-url pattern="/task/**/*"
			access="hasAnyRole('ROLE_TEAMLEADER','ROLE_DEVELOPER')" />
		
		<intercept-url pattern="/role/*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/user/*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/emailconfig/*"
			access="hasAnyRole('ROLE_ADMIN')"/>
			
		<intercept-url pattern="/version/delete*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/version/update*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/version/save*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/version/get*"
			access="hasAnyRole('ROLE_TEAMLEADER','ROLE_DEVELOPER','ROLE_ADMIN')"/>
		
		<intercept-url pattern="/team/delete*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/update*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/save*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/do*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/get*"
			access="hasAnyRole('ROLE_TEAMLEADER','ROLE_DEVELOPER','ROLE_ADMIN')"/>
			
		<intercept-url pattern="/team/delete*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/update*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/save*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/do*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/team/get*"
			access="hasAnyRole('ROLE_TEAMLEADER','ROLE_DEVELOPER','ROLE_ADMIN')"/>
			
		<intercept-url pattern="/status/delete*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/status/save*"
			access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/status/list*"
			access="hasAnyRole('ROLE_TEAMLEADER','ROLE_DEVELOPER','ROLE_ADMIN')"/>
		

		<form-login login-processing-url="/handleLogin" login-page="/login"
			password-parameter="pp" username-parameter="up"
			authentication-failure-url="/login?error=true" default-target-url="/loginsuccess" />

		<logout invalidate-session="true" logout-success-url="/login"
			logout-url="/logout" />
	</http>

	<!-- authentication manager -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder">
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<!-- MD5 encoder for password -->
	<beans:bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" />

	<!-- Customized user detail service from database -->
	<beans:bean id="customUserDetailsService"
		class="task.architecture.security.CustomUserDetailService" />

	<beans:bean id="clientLoginFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler"
			ref="clientFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="clientSuccessHandler" />
		<beans:property name="filterProcessesUrl" value="/clientLoginProcess" />
	</beans:bean>

	<beans:bean id="clientFailureHandler"
		class="task.architecture.security.ClientAuthenticationFailureHandler">
	</beans:bean>
	<beans:bean id="clientSuccessHandler"
		class="task.architecture.security.ClientAuthenticationSuccessHandler">
	</beans:bean>
</beans:beans>